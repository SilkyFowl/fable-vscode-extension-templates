name: Test PowerShell on Ubuntu
on: push

jobs:
  pester-test:
    name: Pester test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup PowerShell module cache
        id: cacher
        uses: actions/cache@v2
        with:
          path: "~/.local/share/powershell/Modules"
          key: ${{ runner.os }}-PSScriptAnalyzer
      - name: Install required PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm install -g pnpm yarn
      - name: Setup .NET 6.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'
      - name: Run Pester
        shell: pwsh
        run: |
          $config = @{
              Run          = @{
                  Path = "tests"
              }
              TestResult   = @{
                  Enabled = $true
                  OutputPath = "testresults/Tests.xml"
              }
              CodeCoverage = @{
                  Enabled = $true
                  Path    = "src/AtcoderFs.Pwsh"
                  OutputPath = "testresults/CodeCoverage.xml"
              }
          }
          Invoke-Pester -Configuration $config
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: testresults
          path: testresults
    if: ${{ always() }}